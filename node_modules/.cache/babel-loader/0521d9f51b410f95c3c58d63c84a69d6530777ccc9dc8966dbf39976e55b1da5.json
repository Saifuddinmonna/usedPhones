{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web development\\\\programming hero\\\\milestone -12\\\\doctors-portal-client-module-77-5-main\\\\doctors-portal-client-module-77-5-main\\\\src\\\\Pages\\\\Dashboard\\\\Payment\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = _ref => {\n  _s();\n  let {\n    booking\n  } = _ref;\n  const [cardError, setCardError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [transactionId, setTransactionId] = useState('');\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    price,\n    email,\n    patient,\n    _id\n  } = booking;\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"https://doctors-portal-server-rust.vercel.app/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `bearer ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify({\n        price\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, [price]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const card = elements.getElement(CardElement);\n    if (card === null) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card\n    });\n    if (error) {\n      console.log(error);\n      setCardError(error.message);\n    } else {\n      setCardError('');\n    }\n    setSuccess('');\n    setProcessing(true);\n    const {\n      paymentIntent,\n      error: confirmError\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: card,\n        billing_details: {\n          name: patient,\n          email: email\n        }\n      }\n    });\n    if (confirmError) {\n      setCardError(confirmError.message);\n      return;\n    }\n    if (paymentIntent.status === \"succeeded\") {\n      console.log('card info', card);\n      // store payment info in the database\n      const payment = {\n        price,\n        transactionId: paymentIntent.id,\n        email,\n        bookingId: _id\n      };\n      fetch('https://doctors-portal-server-rust.vercel.app/payments', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          authorization: `bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify(payment)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        if (data.insertedId) {\n          setSuccess('Congrats! your payment completed');\n          setTransactionId(paymentIntent.id);\n        }\n      });\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          style: {\n            base: {\n              fontSize: '16px',\n              color: '#424770',\n              '::placeholder': {\n                color: '#aab7c4'\n              }\n            },\n            invalid: {\n              color: '#9e2146'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm mt-4 btn-primary\",\n        type: \"submit\",\n        disabled: !stripe || !clientSecret || processing,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: cardError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your transactionId: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: transactionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n_s(CheckoutForm, \"mpUvfV/va5+nMQgwrQOpY1gFkTk=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","React","useEffect","useState","CheckoutForm","booking","cardError","setCardError","success","setSuccess","processing","setProcessing","transactionId","setTransactionId","clientSecret","setClientSecret","stripe","elements","price","email","patient","_id","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleSubmit","event","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","console","log","message","paymentIntent","confirmError","confirmCardPayment","payment_method","billing_details","name","status","payment","id","bookingId","insertedId","style","base","fontSize","color","invalid"],"sources":["G:/Web development/programming hero/milestone -12/doctors-portal-client-module-77-5-main/doctors-portal-client-module-77-5-main/src/Pages/Dashboard/Payment/CheckoutForm.js"],"sourcesContent":["import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\n\nconst CheckoutForm = ({ booking }) => {\n    const [cardError, setCardError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [processing, setProcessing] = useState(false);\n    const [transactionId, setTransactionId] = useState('');\n    const [clientSecret, setClientSecret] = useState(\"\");\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const { price, email, patient, _id } = booking;\n\n    useEffect(() => {\n        // Create PaymentIntent as soon as the page loads\n        fetch(\"https://doctors-portal-server-rust.vercel.app/create-payment-intent\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `bearer ${localStorage.getItem('accessToken')}`\n            },\n            body: JSON.stringify({ price }),\n        })\n            .then((res) => res.json())\n            .then((data) => setClientSecret(data.clientSecret));\n    }, [price]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            return\n        }\n\n        const card = elements.getElement(CardElement);\n        if (card === null) {\n            return;\n        }\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card\n        });\n\n        if (error) {\n            console.log(error);\n            setCardError(error.message);\n        }\n        else {\n            setCardError('');\n        }\n        setSuccess('');\n        setProcessing(true);\n        const { paymentIntent, error: confirmError } = await stripe.confirmCardPayment(\n            clientSecret,\n            {\n                payment_method: {\n                    card: card,\n                    billing_details: {\n                        name: patient,\n                        email: email\n                    },\n                },\n            },\n        );\n\n        if (confirmError) {\n            setCardError(confirmError.message);\n            return;\n        }\n        if (paymentIntent.status === \"succeeded\") {\n            console.log('card info', card);\n            // store payment info in the database\n            const payment = {\n                price,\n                transactionId: paymentIntent.id,\n                email,\n                bookingId: _id\n            }\n            fetch('https://doctors-portal-server-rust.vercel.app/payments', {\n                method: 'POST',\n                headers: {\n                    'content-type': 'application/json',\n                    authorization: `bearer ${localStorage.getItem('accessToken')}`\n                },\n                body: JSON.stringify(payment)\n            })\n                .then(res => res.json())\n                .then(data => {\n                    console.log(data);\n                    if (data.insertedId) {\n                        setSuccess('Congrats! your payment completed');\n                        setTransactionId(paymentIntent.id);\n                    }\n                })\n        }\n        setProcessing(false);\n\n\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <CardElement\n                    options={{\n                        style: {\n                            base: {\n                                fontSize: '16px',\n                                color: '#424770',\n                                '::placeholder': {\n                                    color: '#aab7c4',\n                                },\n                            },\n                            invalid: {\n                                color: '#9e2146',\n                            },\n                        },\n                    }}\n                />\n                <button\n                    className='btn btn-sm mt-4 btn-primary'\n                    type=\"submit\"\n                    disabled={!stripe || !clientSecret || processing}>\n                    Pay\n                </button>\n            </form>\n            <p className=\"text-red-500\">{cardError}</p>\n            {\n                success && <div>\n                    <p className='text-green-500'>{success}</p>\n                    <p>Your transactionId: <span className='font-bold'>{transactionId}</span></p>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default CheckoutForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
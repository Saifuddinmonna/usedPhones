{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web development\\\\programming hero\\\\milestone -12\\\\doctors-portal-client-module-77-5-main\\\\doctors-portal-client-module-77-5-main\\\\src\\\\Pages\\\\Dashboard\\\\Payment\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = _ref => {\n  _s();\n  let {\n    booking\n  } = _ref;\n  const [cardError, setCardError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [processing, setProcessing] = useState(false);\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    price,\n    email,\n    patient,\n    _id\n  } = booking;\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"http://localhost:5000/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      body: JSON.stringify({\n        price\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, [price]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const card = elements.getElement(CardElement);\n    if (card === null) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card\n    });\n    if (error) {\n      console.log(error);\n      setCardError(error.message);\n    } else {\n      setCardError(\"\");\n    }\n    setSuccess(\"\");\n    setProcessing(true);\n    const {\n      paymentIntent,\n      error: confirmError\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: card,\n        billing_details: {\n          name: patient,\n          email: email\n        }\n      }\n    });\n    if (confirmError) {\n      setCardError(confirmError.message);\n      return;\n    }\n    if (paymentIntent.status === \"succeeded\") {\n      console.log(\"card info\", card);\n      // store payment info in the database\n      const payment = {\n        price,\n        transactionId: paymentIntent.id,\n        email,\n        bookingId: _id\n      };\n      fetch(\"http://localhost:5000/payments\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          authorization: `bearer ${localStorage.getItem(\"accessToken\")}`\n        },\n        body: JSON.stringify(payment)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        if (data.insertedId) {\n          setSuccess(\"Congrats! your payment completed\");\n          setTransactionId(paymentIntent.id);\n        }\n      });\n    }\n    setProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          style: {\n            base: {\n              fontSize: \"16px\",\n              color: \"#424770\",\n              \"::placeholder\": {\n                color: \"#aab7c4\"\n              }\n            },\n            invalid: {\n              color: \"#9e2146\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm mt-4 btn-primary\",\n        type: \"submit\",\n        disabled: !stripe || !clientSecret || processing,\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: cardError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your transactionId:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: transactionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(CheckoutForm, \"1qfyVVZePHC2mH0f/KvQFGSOyBQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","React","useEffect","useState","CheckoutForm","booking","cardError","setCardError","success","setSuccess","processing","setProcessing","transactionId","setTransactionId","clientSecret","setClientSecret","stripe","elements","price","email","patient","_id","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleSubmit","event","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","console","log","message","paymentIntent","confirmError","confirmCardPayment","payment_method","billing_details","name","status","payment","id","bookingId","insertedId","style","base","fontSize","color","invalid"],"sources":["G:/Web development/programming hero/milestone -12/doctors-portal-client-module-77-5-main/doctors-portal-client-module-77-5-main/src/Pages/Dashboard/Payment/CheckoutForm.js"],"sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst CheckoutForm = ({ booking }) => {\n\tconst [cardError, setCardError] = useState(\"\");\n\tconst [success, setSuccess] = useState(\"\");\n\tconst [processing, setProcessing] = useState(false);\n\tconst [transactionId, setTransactionId] = useState(\"\");\n\tconst [clientSecret, setClientSecret] = useState(\"\");\n\n\tconst stripe = useStripe();\n\tconst elements = useElements();\n\tconst { price, email, patient, _id } = booking;\n\n\tuseEffect(() => {\n\t\t// Create PaymentIntent as soon as the page loads\n\t\tfetch(\"http://localhost:5000/create-payment-intent\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tauthorization: `bearer ${localStorage.getItem(\"accessToken\")}`,\n\t\t\t},\n\t\t\tbody: JSON.stringify({ price }),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => setClientSecret(data.clientSecret));\n\t}, [price]);\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (!stripe || !elements) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst card = elements.getElement(CardElement);\n\t\tif (card === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { error, paymentMethod } = await stripe.createPaymentMethod({\n\t\t\ttype: \"card\",\n\t\t\tcard,\n\t\t});\n\n\t\tif (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetCardError(error.message);\n\t\t} else {\n\t\t\tsetCardError(\"\");\n\t\t}\n\t\tsetSuccess(\"\");\n\t\tsetProcessing(true);\n\t\tconst { paymentIntent, error: confirmError } =\n\t\t\tawait stripe.confirmCardPayment(clientSecret, {\n\t\t\t\tpayment_method: {\n\t\t\t\t\tcard: card,\n\t\t\t\t\tbilling_details: {\n\t\t\t\t\t\tname: patient,\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\tif (confirmError) {\n\t\t\tsetCardError(confirmError.message);\n\t\t\treturn;\n\t\t}\n\t\tif (paymentIntent.status === \"succeeded\") {\n\t\t\tconsole.log(\"card info\", card);\n\t\t\t// store payment info in the database\n\t\t\tconst payment = {\n\t\t\t\tprice,\n\t\t\t\ttransactionId: paymentIntent.id,\n\t\t\t\temail,\n\t\t\t\tbookingId: _id,\n\t\t\t};\n\t\t\tfetch(\"http://localhost:5000/payments\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t\t\tauthorization: `bearer ${localStorage.getItem(\n\t\t\t\t\t\t\"accessToken\",\n\t\t\t\t\t)}`,\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(payment),\n\t\t\t})\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data.insertedId) {\n\t\t\t\t\t\tsetSuccess(\"Congrats! your payment completed\");\n\t\t\t\t\t\tsetTransactionId(paymentIntent.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tsetProcessing(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<CardElement\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tbase: {\n\t\t\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\t\t\tcolor: \"#424770\",\n\t\t\t\t\t\t\t\t\"::placeholder\": {\n\t\t\t\t\t\t\t\t\tcolor: \"#aab7c4\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tinvalid: {\n\t\t\t\t\t\t\t\tcolor: \"#9e2146\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-sm mt-4 btn-primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tdisabled={!stripe || !clientSecret || processing}>\n\t\t\t\t\tPay\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<p className=\"text-red-500\">{cardError}</p>\n\t\t\t{success && (\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"text-green-500\">{success}</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYour transactionId:{\" \"}\n\t\t\t\t\t\t<span className=\"font-bold\">{transactionId}</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CheckoutForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}